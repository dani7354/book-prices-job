name: Docker Image Build, Push and Deploy

on:
  push:
    branches: [ "main" ]

jobs:
  build_docker_images:
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          logout: true

      - name: Build and push BookPricesJob API
        uses: docker/build-push-action@v6
        with:
          file: Docker/api.Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.API_DOCKER_IMAGE_NAME }}:latest

      - name: Build and push BookPricesJob DB Migration
        uses: docker/build-push-action@v6
        with:
          file: Docker/dbmigration.Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.DB_MIGRATION_DOCKER_IMAGE_NAME }}:latest

  deploy_to_production:
    runs-on: ubuntu-latest
    environment:
      name: Production
      url: https://github.com/${{ github.repository }}/releases/tag/v${{ vars.DEV_VERSION }}
    name: Deployment
    needs: [  build_docker_images ]
    steps:
      - name: Deploy using SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: docker service update --image ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.DB_MIGRATION_DOCKER_IMAGE_NAME }}:latest bookprices_job_api
      - name: Run DB migrations
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.DB_MIGRATION_DOCKER_IMAGE_NAME }}:latest  && docker run ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.DB_MIGRATION_DOCKER_IMAGE_NAME }}:latest --network=${{ vars.DOCKER_NETWORK_NAME }} --env-file ${{ vars.DBMIGRATION_ENV_FILE }}
